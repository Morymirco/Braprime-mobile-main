const fs = require('fs');
const path = require('path');

console.log('üîç Diagnostic de la base de donn√©es BraPrime');
console.log('='.repeat(50));

// V√©rifier les probl√®mes courants
const commonIssues = [
  {
    name: 'Sch√©ma non ex√©cut√©',
    description: 'Le sch√©ma de base de donn√©es n\'a pas √©t√© ex√©cut√©',
    solution: 'Ex√©cuter le fichier database/schema.sql dans Supabase SQL Editor'
  },
  {
    name: 'Trigger manquant',
    description: 'Le trigger handle_new_user n\'existe pas',
    solution: 'V√©rifier que la fonction et le trigger sont cr√©√©s'
  },
  {
    name: 'Table profiles manquante',
    description: 'La table profiles n\'existe pas',
    solution: 'Cr√©er la table profiles avec les bonnes colonnes'
  },
  {
    name: 'Permissions RLS',
    description: 'Les politiques RLS bloquent l\'insertion',
    solution: 'V√©rifier les politiques RLS sur la table profiles'
  }
];

console.log('üìã Probl√®mes courants et solutions :');
console.log('');

commonIssues.forEach((issue, index) => {
  console.log(`${index + 1}. ${issue.name}`);
  console.log(`   Description: ${issue.description}`);
  console.log(`   Solution: ${issue.solution}`);
  console.log('');
});

// Afficher le sch√©ma SQL minimal pour corriger le probl√®me
console.log('üîß Script SQL minimal pour corriger le probl√®me :');
console.log('='.repeat(50));

const minimalSchema = `
-- 1. Cr√©er la table profiles si elle n'existe pas
CREATE TABLE IF NOT EXISTS profiles (
    id UUID REFERENCES auth.users(id) ON DELETE CASCADE PRIMARY KEY,
    email TEXT,
    phone TEXT UNIQUE,
    full_name TEXT,
    avatar_url TEXT,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- 2. Cr√©er la fonction handle_new_user
CREATE OR REPLACE FUNCTION handle_new_user()
RETURNS TRIGGER AS $$
BEGIN
    INSERT INTO profiles (id, email, phone, full_name)
    VALUES (
        NEW.id,
        NEW.email,
        NEW.phone,
        COALESCE(NEW.raw_user_meta_data->>'full_name', '')
    );
    
    RETURN NEW;
EXCEPTION
    WHEN OTHERS THEN
        -- Log l'erreur mais ne pas faire √©chouer l'inscription
        RAISE WARNING 'Erreur lors de la cr√©ation du profil: %', SQLERRM;
        RETURN NEW;
END;
$$ LANGUAGE plpgsql SECURITY DEFINER;

-- 3. Cr√©er le trigger
DROP TRIGGER IF EXISTS on_auth_user_created ON auth.users;
CREATE TRIGGER on_auth_user_created
    AFTER INSERT ON auth.users
    FOR EACH ROW EXECUTE FUNCTION handle_new_user();

-- 4. Activer RLS et cr√©er les politiques
ALTER TABLE profiles ENABLE ROW LEVEL SECURITY;

-- Politique pour permettre l'insertion automatique
CREATE POLICY "Enable insert for authenticated users only" ON profiles
    FOR INSERT WITH CHECK (auth.uid() = id);

-- Politique pour permettre la lecture de son propre profil
CREATE POLICY "Users can view own profile" ON profiles
    FOR SELECT USING (auth.uid() = id);

-- Politique pour permettre la mise √† jour de son propre profil
CREATE POLICY "Users can update own profile" ON profiles
    FOR UPDATE USING (auth.uid() = id);
`;

console.log(minimalSchema);

console.log('');
console.log('üìã √âtapes √† suivre :');
console.log('1. Allez sur https://supabase.com/dashboard/project/gehvdncxbcfotnabmjmo/sql');
console.log('2. Copiez le script ci-dessus');
console.log('3. Collez-le dans l\'√©diteur SQL');
console.log('4. Cliquez sur "Run"');
console.log('5. Testez √† nouveau l\'inscription');
console.log('');

// V√©rifier si le fichier schema.sql existe
const schemaPath = path.join(__dirname, '..', 'database', 'schema.sql');
if (fs.existsSync(schemaPath)) {
  console.log('‚úÖ Le fichier database/schema.sql existe');
  console.log('üí° Vous pouvez aussi ex√©cuter le sch√©ma complet :');
  console.log('   node scripts/setup-database.js');
} else {
  console.log('‚ùå Le fichier database/schema.sql n\'existe pas');
}

console.log('');
console.log('üîç Pour diagnostiquer plus pr√©cis√©ment :');
console.log('1. V√©rifiez les logs dans Supabase Dashboard > Logs');
console.log('2. Regardez les erreurs dans la console de l\'application');
console.log('3. V√©rifiez que l\'authentification par t√©l√©phone est activ√©e'); 